function Res = pic2val( P, tol, stepval, extr, Q)
%pic2val Перевод изображения графика функции в массив данных
%   Задаётся исключительно поле графика(без осей). График - черный, 
%   фон - светлый. 
%   В зонах пересечения с другими контрастными объектами(оси, сетка, 
%   другие графики) обязательно использование графического редактора 
%   для удаления этих объектов (размер необходимой удаляемой зоны 
%   зависит от параметра tol). 
%   Первый контрастный пиксель в первом столбце пикселей изображения должен
%   относиться именно к рассматриваему графику функции.
%   Входные переменные:
%   P - черно-белое изображение.
%   tol - допуск(%). Указывает, на сколько сильно может отличаться
%   следующее значение от предыдущего. По умолчанию -  2%.
%   stepval - пороговое значение контрастности(%). Указывает, с какого
%   значения можно считать цвет черным. По умолчанию -  50%.
%   extr - степень экстраполяции. Может быть дробным. Берём точки 
%   (n-round(extr)) и (n-1), строим прямую, на этой прямой лежит n-я точка.
%   Дробная часть является весовым коэффициентом экстраполяционного
%   подхода, описанного выше, и подхода с простым взятием значения в
%   предыдущей точке. По умолчанию -  1, т.е. простое взятие предыдущего
%   значения.
%   Q - количество точек вывода. По умолчанию - размер изображения по
%   горизониали в пикселях.
%   Выходные переменные:
%   Res - нормированные(0...1) значения "y" точек графика
%% описание переменных, преобразование матрицы P
if nargin==1
    tol=2;
    stepval=50;
    extr=1;
elseif nargin==2
    stepval=50;
    extr=1;
elseif nargin==3
    extr=1;
end
P=P/max(max(P));
[M,N]=size(P);
P=double((1-P)>(1-stepval/100));
% figure(3);
% imagesc(P);
Res=zeros(1,N);
%% проход по столбцам
for n=1:N
    %% задание переменных на новый цикл прохода по строкам
    m=1;
    quanzeros=0;%счетчик нулей
    mf=0;%первый номер строки, где встретилась 1
    ml=0;%последний номер строки, где встретилась 1
    %% проход по строкам
    while m<=M
        if P(m,n)==1
             if n==1
                if ~mf
                    mf=m;
                end
                ml=m;
            elseif m>=Res(n-1)-tol*N/100 && m<=Res(n-1)+tol*N/100
                %проверка точки на вхождение в зону допуска
                if ~mf
                    mf=m;
                end
                ml=m;
             end
        else
            if mf
            %если первое значение найдено, то ждём 5 нулей для конца поиска              
                quanzeros=quanzeros+1;   
                if quanzeros==5
                    m=M;                   
                end
            end
        end
        m=m+1;
        %% выдача значения графика в этой точке
        %если первый элемент был найден, то ищется среднее арифметическое
        %первого и последнего. Если нет - происходит экстраполяция.
        if m>M
            if mf
                Res(n)=(mf+ml)/2;
            elseif n>extr
                s=(1-2*abs(round(extr)-extr));
                Res(n)=s*(3*Res(n-1)-Res(n-round(extr)))/2+(1-s)*Res(n-1);
                if Res(n)<0
                    Res(n)=0;
                end
            end
        end
        
    end
end
%% вывод необходимого количества значений
if nargin~=5
    Res=1-Res/M;
else
    interp=@(x0,y0,x1,y1,x)[y0 y1]/[x0 x1; 1 1]*[x;1];
    NewRes=zeros(1,Q);
    k=0;
    for q=linspace(1,N,Q)
        k=k+1;
        for n=1:N
            if q==n
                NewRes(k)=Res(n);
                break;
            elseif n>q
                NewRes(k)=interp(n-1,Res(n-1),n,Res(n),q);
                break;
            end
        end
    end
    Res=1-NewRes/M;
end
end

